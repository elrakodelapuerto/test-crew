{"version":3,"sources":["Quests/Quests.jsx","assets/img/back.svg","assets/img/add.svg","Searchers/Inforgs.jsx","assets/img/pilot.svg","Searchers/Searcher.jsx","Searchers/Statuses.jsx","Searchers/CurrentQuest.jsx","EditSearcher/EditSearcher.jsx","Searchers/Searchers.jsx","App.jsx","reportWebVitals.ts","index.jsx","EditSearcher/EditSearcher.module.css","Searchers/Searchers.module.css"],"names":["base","Airtable","apiKey","Quests","useState","quests","setQuests","link","setLink","useEffect","select","all","error","records","map","record","fields","value","onChange","e","target","onClick","chat_link","create","err","console","addedQuest","quest","to","quest_id","full_name","Inforgs","crews","className","styles","separator","inforgs","searcher","searcher_phone","call_sign","Searcher","getTime","toggleModal","searcher_role","searcher_time","searcher_place","searcherHeader","searcherCallSign","includes","isPilot","src","alt","searcherBody","Statuses","setSelected","selectedSearchers","date","Date","now","tomorrow","setDate","getDate","toLocaleDateString","toLocaleTimeString","hour","minute","selected","index","indexOf","push","splice","status","statuses","Object","keys","length","crew","test","currentQuest","Set","this","forEach","filter","searcher_status","CurrentQuest","questID","setCrews","searchers","filterByFormula","table_id","id","find","s","searcher_id","log","data","update","uniteCrew","EditSearcher","history","useHistory","URLSearchParams","useLocation","search","get","editSearcher","header","back","goBack","form","onSubmit","preventDefault","formData","fromEntries","FormData","time","toISOString","metaData","parseInt","searcher_crew","searcherData","getId","updateSearcher","type","name","Searchers","modal","setModal","Modal","modalWrapper","modalHeader","modalClose","document","body","style","overflowY","addSearcher","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8b9de299.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Airtable from \"airtable\";\r\nimport {Link} from \"react-router-dom\";\r\nlet base = new Airtable({apiKey: 'keyHvrSKnN3fo7ORx'}).base('appou4euyZ2UDPPEg');\r\n\r\nconst Quests = () => {\r\n\r\n    const [quests, setQuests] = useState([]);\r\n    const [link, setLink] = useState([]);\r\n\r\n    useEffect( () => {\r\n        base('Quests').select().all( (error, records) => {\r\n            const quests = records.map( record => record.fields)\r\n            setQuests(quests);\r\n        })\r\n    }, [] )\r\n\r\n    const addQuest = (chat_link) => {\r\n\r\n        base('Quests').create([\r\n            {\r\n                \"fields\": {\r\n                    \"quest_id\": 20000003,\r\n                    \"full_name\": \"Харонов Харон Харонович\",\r\n                    \"chat_link\": chat_link\r\n                }\r\n            }\r\n        ], function(err, records) {\r\n            if (err) {\r\n                console.error(err);\r\n                return;\r\n            }\r\n            const addedQuest = records.map( record => record.fields)[0]\r\n            setQuests([...quests, addedQuest])\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quests</h1>\r\n            <div>\r\n                Link <br />\r\n                <input value={link} onChange={(e) => setLink(e.target.value)}/>\r\n            </div>\r\n            <button onClick={() => addQuest(link)}>\r\n                Add Quest\r\n            </button>\r\n            <ul>\r\n                {quests && quests.map( (quest) => (\r\n                    <li key={quest.quest_id}>\r\n                        <Link to={'/crew?quest_id='+quest.quest_id}>\r\n                            {quest.full_name}\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quests;","export default __webpack_public_path__ + \"static/media/back.a12e73f8.svg\";","export default __webpack_public_path__ + \"static/media/add.ea560959.svg\";","import styles from \"./Searchers.module.css\";\r\n\r\nexport function Inforgs({crews}) {\r\n    return <div>\r\n        <div className={styles.separator}></div>\r\n        <h3>Инфорги:</h3>\r\n        {\r\n            crews.inforgs && crews.inforgs.map((searcher) => {\r\n                const {searcher_phone, call_sign} = searcher;\r\n                return (\r\n                    <div className={styles.searcher}>\r\n                        <div>\r\n                            <div>{call_sign}</div>\r\n                            <div>{searcher_phone}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        }\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/pilot.fd0a23e8.svg\";","import styles from \"./Searchers.module.css\";\r\nimport isPilot from \"../assets/img/pilot.svg\";\r\n\r\nexport function Searcher({select, searcher, getTime, toggleModal}) {\r\n\r\n    const {searcher_role, searcher_phone, searcher_time, call_sign, searcher_place} = searcher;\r\n    return <div onClick={() => toggleModal(searcher)} className={styles.searcher}>\r\n        <div className={styles.searcherHeader}>\r\n            <div className={styles.searcherCallSign}>{call_sign}\r\n                {searcher_role.includes('пилот') ?\r\n                    <span className={styles.isPilot}><img src={isPilot}\r\n                                                          alt=''/> </span> : ''}\r\n            </div>\r\n            <div>{searcher_phone}</div>\r\n        </div>\r\n        <div className={styles.searcherBody}>\r\n            <div>\r\n                {searcher_place}\r\n            </div>\r\n            <div>\r\n                {getTime(searcher_time)}\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}","import styles from \"./Searchers.module.css\";\r\nimport {Searcher} from \"./Searcher\";\r\n\r\nexport function Statuses({crews, setSelected, selectedSearchers, toggleModal}) {\r\n\r\n    function getTime(searcher_time) {\r\n        const date = new Date(searcher_time);\r\n        const now = new Date()\r\n        const tomorrow = new Date();\r\n        tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n        const day = now.toLocaleDateString() === date.toLocaleDateString() ? 'Сегодня' : tomorrow.toLocaleDateString() === date.toLocaleDateString() ? 'Завтра' : date.toLocaleDateString()\r\n        const time = date.toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'});\r\n        return day + ' ' + time;\r\n    }\r\n\r\n    function select(searcher) {\r\n        const selected = [...selectedSearchers];\r\n        let index = selectedSearchers.indexOf(searcher);\r\n        if (index === -1) {\r\n            selected.push(searcher);\r\n        } else {\r\n            selected.splice(index, 1);\r\n        }\r\n        setSelected(selected)\r\n    }\r\n\r\n    return <div className={styles.status}>\r\n        {crews && crews.statuses && Object.keys(crews.statuses).map(status => {\r\n            if (crews.statuses[status].length > 0) {\r\n                if (status === 'в пути на задачу') {\r\n                    return <div>\r\n                        <div className={styles.separator}></div>\r\n                        <h3>В пути на задачу:</h3>\r\n                        {crews.crews && crews.crews.map((crew, index) => (\r\n                            <div>\r\n                                {crew.length > 0 && <h4>{index === 0 ? 'Ждут экипаж' : 'Экипаж #' + index}</h4>}\r\n                                {crew && crew.map(searcher => (\r\n                                    searcher &&\r\n                                    <Searcher toggleModal={toggleModal} searcher={searcher} getTime={getTime} select={select}></Searcher>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                } else {\r\n                    return <div>\r\n                        <div className={styles.separator}></div>\r\n                        <h3>{status}:</h3>\r\n                        {crews.statuses[status] && crews.statuses[status].map(searcher => (\r\n                            searcher && <Searcher toggleModal={toggleModal} searcher={searcher} getTime={getTime} select={select}></Searcher>\r\n                        ))}\r\n                    </div>\r\n                }\r\n            }\r\n        })}\r\n    </div>\r\n}","import {useParams} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Airtable from \"airtable\";\r\nimport {Inforgs} from \"./Inforgs\";\r\nimport {Statuses} from \"./Statuses\";\r\n\r\nconst test = {\r\n    currentQuest: [],\r\n    get crews() {\r\n        const crews = [[]];\r\n        const arr = [...new Set(this.statuses['в пути на задачу'].map( (searcher) => searcher[\"searcher_crew\"]))]\r\n        arr.forEach( crew => {\r\n            if (crew===0) {\r\n                crews[0] = this.statuses['в пути на задачу'].filter( searcher => searcher[\"searcher_crew\"] === crew )\r\n            } else {\r\n                crews.push(this.statuses['в пути на задачу'].filter( searcher => searcher[\"searcher_crew\"] === crew ))\r\n            }\r\n        })\r\n        return crews;\r\n    },\r\n    get inforgs() {\r\n        return this.currentQuest.filter( searcher => searcher[\"searcher_role\"].includes('инфорг') )\r\n    },\r\n    get snm() {\r\n        return this.currentQuest.filter( (searcher) => searcher[\"searcher_role\"].includes('снм') )\r\n    },\r\n    get coord() {\r\n        return this.currentQuest.filter( (searcher) => searcher[\"searcher_role\"].includes('коорд') )\r\n    },\r\n    get statuses() {\r\n        const statuses = {'готов':[], 'в пути на задачу':[], 'на задаче':[], 'в пути домой':[], 'дома':[]}\r\n        this.currentQuest.forEach(searcher => {\r\n            if (searcher.searcher_status !== 'готов') {\r\n                statuses[searcher.searcher_status].push(searcher)\r\n            } else if ( searcher[\"searcher_role\"].includes('пилот') || searcher[\"searcher_role\"].includes('пеший') ) {\r\n                statuses[searcher.searcher_status].push(searcher)\r\n            }\r\n        })\r\n        return statuses;\r\n    }\r\n\r\n};\r\n\r\nexport function CurrentQuest({questID, toggleModal}) {\r\n    const [crews, setCrews] = useState({});\r\n    const [selectedSearchers, setSelected] = useState([]);\r\n    let base = new Airtable({apiKey: 'keyHvrSKnN3fo7ORx'}).base('appou4euyZ2UDPPEg');\r\n\r\n    useEffect(() => {\r\n        base('Searchers').select().all((error, records) => {\r\n            const searchers = records.map(record => record.fields)\r\n\r\n            base('CrewMeta').select(\r\n                {\r\n                    filterByFormula: `{quest_id} = ${questID}`\r\n                }\r\n            ).all((error, records) => {\r\n                test['currentQuest'] = records.map(record => ({\r\n                    ...record.fields,\r\n                    table_id: record.id, ...searchers.find(s => s[\"searcher_id\"] === record.fields.searcher_id)\r\n                }));\r\n                console.log(test);\r\n                setCrews({...test});\r\n            })\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    function uniteCrew() {\r\n        const data = []\r\n        selectedSearchers.forEach(searcher => {\r\n            console.log(searcher);\r\n            data.push({\r\n                id: searcher.table_id,\r\n                fields: {\r\n                    searcher_status: \"готов\"\r\n                }\r\n            })\r\n        })\r\n        base('CrewMeta').update(data, (error, records) => {\r\n            records.forEach(record => {\r\n                test.currentQuest.find(searcher => searcher.table_id === record.id).searcher_status = record.fields.searcher_status\r\n                setCrews({...test});\r\n            })\r\n        });\r\n    }\r\n\r\n    return <div>\r\n                <Inforgs crews={crews}/>\r\n                <Statuses toggleModal={toggleModal} crews={crews} setSelected={setSelected} selectedSearchers={selectedSearchers} />\r\n                <div>\r\n                    {selectedSearchers && selectedSearchers.map(searcher => {\r\n                        return <div>\r\n                            {searcher[\"call_sign\"]}\r\n                        </div>\r\n                    })}\r\n                    <button onClick={() => uniteCrew()}>Объединить в экипаж</button>\r\n                </div>\r\n    </div>;\r\n}","import {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport styles from './EditSearcher.module.css'\r\nimport back from \"../assets/img/back.svg\";\r\nimport Airtable from \"airtable\";\r\n\r\nlet base = new Airtable({apiKey: 'keyHvrSKnN3fo7ORx'}).base('appou4euyZ2UDPPEg');\r\n\r\nconst EditSearcher = () => {\r\n    let history = useHistory();\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const questID = useQuery().get(\"quest_id\");\r\n\r\n    const updateSearcher = (e) => {\r\n        e.preventDefault()\r\n        const formData = Object.fromEntries(new FormData(e.target))\r\n        const time = new Date(formData[\"searcher_time\"]).toISOString()\r\n        const metaData = {\r\n            quest_id: parseInt(questID),\r\n            searcher_crew: 0,\r\n            searcher_id: parseInt(formData[\"searcher_id\"]),\r\n            searcher_place: formData[\"searcher_place\"],\r\n            searcher_role: [formData[\"searcher_role\"]],\r\n            searcher_status: 'готов',\r\n            searcher_time: time\r\n        }\r\n        const searcherData = {\r\n            searcher_id: parseInt(formData[\"searcher_id\"]),\r\n            searcher_phone: formData[\"searcher_phone\"],\r\n            call_sign: formData[\"call_sign\"],\r\n        }\r\n\r\n        base('CrewMeta').create([\r\n            {\r\n                \"fields\": metaData\r\n            }\r\n        ], function (err, records) {\r\n            if (err) {\r\n                console.error(err);\r\n                return;\r\n            }\r\n            records.forEach(function (record) {\r\n                console.log(record.getId());\r\n            });\r\n        });\r\n        base('Searchers').create([\r\n            {\r\n                \"fields\": searcherData\r\n            }\r\n        ], function (err, records) {\r\n            if (err) {\r\n                console.error(err);\r\n                return;\r\n            }\r\n            records.forEach(function (record) {\r\n                console.log(record.getId());\r\n            });\r\n        });\r\n    }\r\n\r\n    return <div className={styles.editSearcher}>\r\n        <div className={styles.header}><div className={styles.back} onClick={() => history.goBack()}><img src={back} alt='back'/></div>\r\n            <h1>Добавить</h1>\r\n        </div>\r\n        <div>\r\n            <form className={styles.form} onSubmit={(e) => updateSearcher(e)}>\r\n                <label>\r\n                    Позывной:\r\n                    <input type=\"text\" name=\"call_sign\"/>\r\n                </label>\r\n                <label>\r\n                    @id:\r\n                    <input type=\"number\" name=\"searcher_id\"/>\r\n                </label>\r\n                <label>\r\n                    Номер телефона:\r\n                    <input type=\"phone\" name=\"searcher_phone\"/>\r\n                </label>\r\n                <label>\r\n                    Адрес:\r\n                    <input type=\"adress\" name=\"searcher_place\"/>\r\n                </label>\r\n                <label>\r\n                    Время:\r\n                    <input type=\"datetime-local\" name=\"searcher_time\"/>\r\n                </label>\r\n                <label>\r\n                    Роль:\r\n                    <select name=\"searcher_role\">\r\n                        <option selected value=\"пеший\">Пеший</option>\r\n                        <option value=\"пилот\">Пилот</option>\r\n                        <option value=\"инфорг\">Инфорг</option>\r\n                        <option value=\"снм\">СНМ</option>\r\n                        <option value=\"коорд\">Коорд</option>\r\n                    </select>\r\n                </label>\r\n                <input type=\"submit\" value=\"Добавить\"/>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n}\r\nexport default EditSearcher;","import {Link, Route, Switch, useHistory, useLocation, useParams, useRouteMatch} from \"react-router-dom\";\r\nimport styles from './Searchers.module.css'\r\nimport back from '../assets/img/back.svg'\r\nimport add from '../assets/img/add.svg'\r\nimport {CurrentQuest} from \"./CurrentQuest\";\r\nimport EditSearcher from \"../EditSearcher/EditSearcher\";\r\nimport {useState} from \"react\";\r\n\r\nconst Searchers = () => {\r\n    const [activeModal, setActiveModal] = useState(false)\r\n    const [modal, setModal] = useState([])\r\n    const history = useHistory();\r\n\r\n    const Modal = ({searcher}) => {\r\n        return <div className={styles.modal}>\r\n            <div className={styles.modalWrapper}>\r\n                <div className={styles.modalHeader}>\r\n                    <h3>{searcher.call_sign}</h3>\r\n                    <div className={styles.modalClose}\r\n                         onClick={() => toggleModal()}>\r\n                        Отмена\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <ul>\r\n                        <li>Сменить статус</li>\r\n                        <li>Редактировать</li>\r\n                        <li>В экипаж</li>\r\n                        <li>Удалить</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const toggleModal = (searcher) => {\r\n        console.log(modal);\r\n        if (!modal[0]) {\r\n            document.body.style.overflowY = \"hidden\";\r\n            setModal([true, searcher])\r\n        } else {\r\n            document.body.style.overflowY = \"auto\";\r\n            setModal([false])\r\n        }\r\n    }\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const questID = useQuery().get(\"quest_id\");\r\n\r\n    return (\r\n        <div className={styles.searchers}>\r\n            {modal[0] && <Modal searcher={modal[1]}/>}\r\n            <div className={styles.header}>\r\n                <div className={styles.back} onClick={() => history.goBack()}><img src={back} alt='back'/></div>\r\n                <h1>Команда</h1>\r\n            </div>\r\n            <div className={styles.addSearcher}>\r\n                <Link to={'/edit_searcher?quest_id=' + questID}>+ Добавить поисковика</Link>\r\n            </div>\r\n            <CurrentQuest questID={questID} toggleModal={toggleModal}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchers;","import React, {useEffect, useState} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route, match, useRouteMatch\n} from \"react-router-dom\";\nimport Quests from \"./Quests/Quests\";\nimport Searchers from \"./Searchers/Searchers\";\nimport EditSearcher from \"./EditSearcher/EditSearcher\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path={\"/\"} exact>\n                    <Quests />\n                </Route>\n                <Route path={\"/crew\"}>\n                    <Searchers />\n                </Route>\n                <Route path={\"/edit_searcher\"}>\n                    <EditSearcher />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editSearcher\":\"EditSearcher_editSearcher__3CL0J\",\"header\":\"EditSearcher_header__3W2M0\",\"back\":\"EditSearcher_back__1FPk1\",\"form\":\"EditSearcher_form__2m1Xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchers\":\"Searchers_searchers__uqCT5\",\"searcher\":\"Searchers_searcher__QYm_r\",\"separator\":\"Searchers_separator__1NuHH\",\"searcherHeader\":\"Searchers_searcherHeader__gbkjb\",\"searcherBody\":\"Searchers_searcherBody__3K4ol\",\"searcherCallSign\":\"Searchers_searcherCallSign__1UT5Q\",\"isPilot\":\"Searchers_isPilot__3zPbe\",\"back\":\"Searchers_back__OYl4x\",\"status\":\"Searchers_status__2CxmW\",\"selected\":\"Searchers_selected__2aUQp\",\"header\":\"Searchers_header__1P0HM\",\"addSearcher\":\"Searchers_addSearcher__eFHWo\",\"modal\":\"Searchers_modal__1p25u\",\"modalWrapper\":\"Searchers_modalWrapper__1-bsN\",\"modalClose\":\"Searchers_modalClose__1S60B\",\"modalHeader\":\"Searchers_modalHeader__2BFWP\"};"],"sourceRoot":""}